[{"/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/index.js":"1","/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/reportWebVitals.js":"2","/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/pages/Landing.jsx":"3","/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/components/layout/AppNavBar.jsx":"4","/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/components/tasks/TaskRows.jsx":"5"},{"size":506,"mtime":1609945851666,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609945546212,"results":"8","hashOfConfig":"7"},{"size":2433,"mtime":1609951929255,"results":"9","hashOfConfig":"7"},{"size":4640,"mtime":1609951270450,"results":"10","hashOfConfig":"7"},{"size":1596,"mtime":1609952136035,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1df9me5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/index.js",[],["24","25"],"/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/reportWebVitals.js",[],"/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/pages/Landing.jsx",["26","27"],"import React, { Fragment, useState } from 'react';\nimport AppNavBar from '../components/layout/AppNavBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TaskRows } from '../components/tasks/TaskRows';\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        height: '100vh',\n        paddingTop: 50\n    },\n    table: {\n        minWidth: 650\n    }\n}));\n\nexport default function Landing() {\n    const [userName, setUserName] = useState('gonzalo');\n\n    const [taskItems, setTaskItems] = useState([\n        {\n            name: 'tarea 1',\n            id: 1,\n            done: false\n        },\n        {\n            name: 'tarea 2',\n            id: 2,\n            done: false\n        },\n        {\n            name: 'tarea 3',\n            id: 3,\n            done: true\n        },\n        {\n            name: 'tarea 4',\n            id: 4,\n            done: false\n        }\n    ]);\n\n    const toggleTask = (task) => {\n        setTaskItems(taskItems.map((t) => (t.name === task.name ? { ...t, done: !t.done } : t)));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Nombre</TableCell>\n                                <TableCell align=\"center\">Completado</TableCell>\n                                <TableCell align=\"center\">Cambiar Estado</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TaskRows taskItems={taskItems} toggleTask={toggleTask} />\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <AppNavBar />\n        </Fragment>\n    );\n}\n","/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/components/layout/AppNavBar.jsx",[],"/Users/themrcorvy/Desktop/Nuevo Mundo/Estudios/local-material/src/components/tasks/TaskRows.jsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":25,"column":12,"nodeType":"34","messageId":"35","endLine":25,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":25,"column":22,"nodeType":"34","messageId":"35","endLine":25,"endColumn":33},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","'setUserName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]